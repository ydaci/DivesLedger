name: CI/CD for DivesLedger backend & frontend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies - backend
        run: |
          npm install --force
          npm install @nomiclabs/hardhat-ethers@^2.2.3 --force
        working-directory: backend

      - name: Set up environment variables
        run: |
          echo "ALCHEMY=${{ secrets.ALCHEMY }}" >> $GITHUB_ENV
          echo "PK=${{ secrets.PK }}" >> $GITHUB_ENV
          echo "ETHERSCAN=${{ secrets.ETHERSCAN }}" >> $GITHUB_ENV
        working-directory: backend

      - name: Start Hardhat node
        run: npx hardhat node &
        working-directory: backend

      - name: Wait for Hardhat node to start
        run: sleep 10

      - name: Run tests
        run: npx hardhat test
        working-directory: backend

      - name: Deploy contract
        run: npx hardhat run --network localhost scripts/DivesLedger.js
        working-directory: backend
        if: github.ref == 'refs/heads/main'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies - frontend
        run: |
          cd frontend
          npm install

      - name: Build Next.js application
        run: |
          cd frontend
          npm run build

      - name: Deploy on Vercel
        env:
          VERCEL_TOKEN: UB6avaQcabrojrZHSm2ZrUaY
        run: |
          npm install -g vercel
          cd frontend  # Assurez-vous que le chemin d'accès est correct pour accéder à votre application frontend
          vercel --prod --token $VERCEL_TOKEN
